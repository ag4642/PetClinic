package org.springframework.samples.petclinic.repository.jdbc;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Collection;
import java.util.List;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;
import org.springframework.samples.petclinic.model.Supply;
import org.springframework.samples.petclinic.repository.SupplyRepository;
import org.springframework.samples.petclinic.repository.VisitRepository;
import org.springframework.stereotype.Repository;

@Repository
public class JdbcSupplyRepositoryImpl implements SupplyRepository {

	private JdbcTemplate jdbcTemplate;

	private SimpleJdbcInsert insertSupply;
	private NamedParameterJdbcTemplate namedParameterJdbcTemplate;

	private SupplyRepository supplyRepository;

	@Autowired
	public JdbcSupplyRepositoryImpl(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}

	@Override
	public Collection<Supply> findAllSupplies() throws DataAccessException {
		final List<Supply> supplies = this.jdbcTemplate.query("SELECT id, item, purpose, quantity FROM supplies",
				new BeanPropertyRowMapper<Supply>() {
					@Override
					public Supply mapRow(ResultSet rs, int row) throws SQLException {
						Supply supply = new Supply();
						supply.setId(rs.getInt("id"));
						supply.setItem(rs.getString("item"));
						supply.setPurpose(rs.getString("purpose"));
						supply.setQuantity(rs.getInt("quantity"));
						return supply;
					}
				});
		return supplies;
	}
}